import re
import shutil
import tempfile
import zipfile
from pathlib import Path

from bs4 import BeautifulSoup

from constants import TEMP_DIR


def extract_number(name):
    match = re.search(r'(\d+)', name.stem)
    return int(match.group(1)) if match else 0


def rename_images_to_match_html(images_dir_path, converted_zip_path):
    if not images_dir_path:
        print("‚ö†Ô∏è –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –Ω–µ —É–∫–∞–∑–∞–Ω ‚Äî –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
        return
    images_dir = Path(images_dir_path)
    converted_zip_path = Path(converted_zip_path)

    if not images_dir.exists():
        print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {images_dir}")
        return
    if not converted_zip_path.exists():
        print(f"‚ö†Ô∏è –ê—Ä—Ö–∏–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {converted_zip_path}")
        return

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è HTML
    with tempfile.TemporaryDirectory() as tmp_dir:
        tmp_dir = Path(tmp_dir)
        with zipfile.ZipFile(converted_zip_path, 'r') as zip_ref:
            zip_ref.extractall(tmp_dir)

        # –ò—â–µ–º HTML-—Ñ–∞–π–ª –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–º –∞—Ä—Ö–∏–≤–µ
        html_files = list(tmp_dir.glob("*.html"))
        if not html_files:
            print("‚ùå HTML-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∞—Ä—Ö–∏–≤–µ")
            return

        html_file = html_files[0]

        # –ß—Ç–µ–Ω–∏–µ HTML
        with open(html_file, 'r', encoding='utf-8') as f:
            soup = BeautifulSoup(f, 'html.parser')

        img_tags = soup.find_all('img')
        html_image_names = [Path(tag['src']).name for tag in img_tags if tag.get('src')]

        # print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ HTML: {len(html_image_names)}")

        # –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        local_images = sorted(images_dir.glob("*.jpg"), key=extract_number)
        # print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ images/: {len(local_images)}")

        if len(local_images) != len(html_image_names):
            print("‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç! –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            return

        # –í—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ
        temp_names = []
        for i, img_path in enumerate(local_images):
            temp_name = img_path.with_name(f"__temp_{i}.jpg")
            img_path.rename(temp_name)
            temp_names.append(temp_name)

        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ –ø–æ—Ä—è–¥–∫—É
        for temp_path, final_name in zip(temp_names, html_image_names):
            new_path = images_dir / final_name
            temp_path.rename(new_path)

        print("‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ–¥ html –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")


def prepare_upload_folder(converted_zip_path, images_dir, word_path):
    upload_folder = Path(TEMP_DIR / 'upload_folder')
    if upload_folder.exists():
        shutil.rmtree(upload_folder)
    upload_folder.mkdir()

    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º ZIP –≤ upload_folder
    with zipfile.ZipFile(converted_zip_path, 'r') as zip_ref:
        zip_ref.extractall(upload_folder)

    # –ò—â–µ–º HTML-—Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –µ–≥–æ
    html_files = list(upload_folder.glob('*.html'))
    if not html_files:
        raise FileNotFoundError("HTML —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–º –∞—Ä—Ö–∏–≤–µ")

    original_html_name = Path(word_path).stem + '.html'
    original_html_path = upload_folder / original_html_name
    html_files[0].rename(original_html_path)

    upload_zip_path = None

    # –ï—Å–ª–∏ images_dir —É–∫–∞–∑–∞–Ω –∏ –≤ –Ω—ë–º –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ‚Äî —Å–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤
    if images_dir and Path(images_dir).exists():
        image_files = list(Path(images_dir).glob('*'))
        if image_files:
            # –°–æ–∑–¥–∞—ë–º images/ –≤ –ø–∞–ø–∫–µ upload_folder
            images_folder = upload_folder / 'images'
            images_folder.mkdir(exist_ok=True)

            for img_path in image_files:
                shutil.copy(img_path, images_folder / img_path.name)

            # ‚úÖ –°–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤ upload.zip —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
            upload_zip_path = upload_folder / 'upload.zip'
            with zipfile.ZipFile(upload_zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
                for img_file in images_folder.glob('*'):
                    arcname = img_file.name
                    zipf.write(img_file, arcname)

    print(f"üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
    print(f"üìù HTML: {original_html_path}")
    if upload_zip_path:
        print(f"üóÇÔ∏è ZIP:  {upload_zip_path}")
    else:
        print("‚ÑπÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Ç ‚Äî zip –∞—Ä—Ö–∏–≤ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è")

    return str(original_html_path), str(upload_zip_path) if upload_zip_path else None, upload_folder
