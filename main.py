import os
import zipfile
from api_uploader.api_uploader import GuideUploader
from image_optimizer.archive_processor import process_archive
from word_to_html_converter import WordToHtmlConverter


def main():
    try:
        # 1. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Word -> HTML+ZIP
        print("üîÑ –®–∞–≥ 1/3: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Word –≤ ZIP...")
        converter = WordToHtmlConverter()
        success, original_zip_path = converter.convert()

        if not success:
            print("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ Word –≤ ZIP")
            return

        print(f"‚úÖ ZIP —Å–æ–∑–¥–∞–Ω: {original_zip_path}")

        # 2. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        print("\nüîÑ –®–∞–≥ 2/3: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        try:
            result_folder = process_archive(zip_path=original_zip_path)

            # –ù–∞—Ö–æ–¥–∏–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π HTML —Ñ–∞–π–ª
            html_files = [f for f in os.listdir(result_folder)
                          if f.endswith('.html')]

            if len(html_files) != 1:
                raise ValueError(f"–ù–∞–π–¥–µ–Ω–æ {len(html_files)} HTML —Ñ–∞–π–ª–æ–≤, –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 1")

            html_path = os.path.join(result_folder, html_files[0])
            images_zip_path = os.path.join(result_folder, 'images.zip')

            # –°–æ–∑–¥–∞–µ–º —á–∏—Å—Ç—ã–π –∞—Ä—Ö–∏–≤ –ë–ï–ó HTML –≤ images.zip
            clean_images_zip = os.path.join(result_folder, 'clean_images.zip')
            with zipfile.ZipFile(images_zip_path, 'r') as src_zip, \
                    zipfile.ZipFile(clean_images_zip, 'w') as dst_zip:

                for item in src_zip.namelist():
                    if not item.endswith('.html'):  # –ò—Å–∫–ª—é—á–∞–µ–º HTML —Ñ–∞–π–ª—ã
                        dst_zip.writestr(item, src_zip.read(item))

            # –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            upload_zip_path = os.path.join(result_folder, 'upload.zip')
            with zipfile.ZipFile(upload_zip_path, 'w') as final_zip:

                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫—É images/
                with zipfile.ZipFile(clean_images_zip, 'r') as img_zip:
                    for img_file in img_zip.namelist():
                        final_zip.writestr(f'images/{img_file}', img_zip.read(img_file))

            print("\n‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞—Ä—Ö–∏–≤–∞:")
            with zipfile.ZipFile(upload_zip_path, 'r') as z:
                for file in z.namelist():
                    print(f"- {file}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")
            return

        # 3. –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        print("\nüîÑ –®–∞–≥ 3/3: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
        try:
            uploader = GuideUploader()
            response = uploader.upload_guide(
                html_path=html_path,
                zip_path=upload_zip_path,
                level_id=7,
                title=os.path.splitext(os.path.basename(original_zip_path))[0],
                order=0
            )
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")

    except Exception as e:
        print(f"üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == '__main__':
    main()