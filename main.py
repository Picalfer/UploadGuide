import os

import requests

from api_uploader.api_uploader import GuideUploader
from constants import API_COURSES_IDS
from image_optimizer.archive_processor import process_archive
from word_to_html_converter.word_to_html_converter import select_and_convert


def main():
    try:
        # 1. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Word -> ZIP
        print("üîÑ –®–∞–≥ 1/3: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Word –≤ ZIP...")
        original_zip_path = select_and_convert()
        print(f"‚úÖ ZIP —Å–æ–∑–¥–∞–Ω: {original_zip_path}")

        # 2. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        print("\nüîÑ –®–∞–≥ 2/3: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        html_path, upload_zip_path = process_archive(zip_path=original_zip_path)
        print(f"‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! HTML: {html_path}")

        # 3. –î–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å html_path –∏ upload_zip_path...
        print("‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

        # üëâ 2. –í–≤–æ–¥ ID —É—Ä–æ–≤–Ω—è
        response = requests.get(API_COURSES_IDS)
        response.raise_for_status()

        data = response.json()

        print("\nüìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã –∏ —É—Ä–æ–≤–Ω–∏:")
        for course in data['courses']:
            print(f"üìò {course['course_title']} (Course ID: {course['course_id']})")
            for level in course['levels']:
                print(f"  ‚îî‚îÄ‚îÄ üìó {level['level_title']} (Level ID: {level['level_id']})")

        level_id_input = input("\n–í–≤–µ–¥–∏—Ç–µ ID –Ω—É–∂–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ").strip()
        if not level_id_input.isdigit():
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            exit()

        level_id = int(level_id_input)

        # 3. –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        print("\nüîÑ –®–∞–≥ 3/3: –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
        try:
            uploader = GuideUploader()
            response = uploader.upload_guide(
                html_path=html_path,
                zip_path=upload_zip_path,
                level_id=level_id,
                title=os.path.splitext(os.path.basename(original_zip_path))[0],
                order=0
            )
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")

    except Exception as e:
        print(f"üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")


if __name__ == '__main__':
    main()
