import os
from typing import Dict, Optional

import requests

from constants import API_COURSES_IDS
from .guide_uploader import upload_guide  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é


def get_available_courses(api_url: str) -> Dict:
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π"""
    response = requests.get(api_url)
    response.raise_for_status()
    return response.json()


def select_level_interactive(courses_data: Dict) -> int:
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è —Å CLI"""
    print("\nüìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã –∏ —É—Ä–æ–≤–Ω–∏:")
    for course in courses_data['courses']:
        print(f"üìò {course['course_title']} (Course ID: {course['course_id']})")
        for level in course['levels']:
            print(f"  ‚îî‚îÄ‚îÄ üìó {level['level_title']} (Level ID: {level['level_id']})")

    while True:
        level_id = input("\n–í–≤–µ–¥–∏—Ç–µ ID –Ω—É–∂–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: ").strip()
        if level_id.isdigit():
            return int(level_id)
        print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


def process_upload_flow(
        html_path: str,
        assets_zip_path: str,
        original_zip_path: str,
        courses_api_url: str = API_COURSES_IDS,
        auth_config_path: str = 'api_config.txt'
) -> Optional[Dict]:
    """
    –ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ—Ç–æ–¥–∏—á–∫–∏:
    1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫—É—Ä—Å–æ–≤
    2. –í—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è
    3. –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–∞—Ö
        courses_data = get_available_courses(courses_api_url)

        # –í—ã–±–∏—Ä–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
        level_id = select_level_interactive(courses_data)

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        title = os.path.splitext(os.path.basename(original_zip_path))[0]

        print("\nüîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
        response = upload_guide(
            html_path=html_path,
            zip_path=assets_zip_path,
            level_id=level_id,
            title=title,
            config_path=auth_config_path
        )

        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ! –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response}")
        return response

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {e}")
        return None
