import shutil
import zipfile
from pathlib import Path

from constants import TEMP_DIR
from zip_postprocessor.html_processing.cleanup import remove_google_redirects
from zip_postprocessor.html_processing.code_blocks import process_code_sections


def prepare_upload_folder(converted_zip_path, images_dir, word_path):
    upload_folder = Path(TEMP_DIR / 'upload_folder')
    if upload_folder.exists():
        shutil.rmtree(upload_folder)
    upload_folder.mkdir()

    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º ZIP –≤ upload_folder
    with zipfile.ZipFile(converted_zip_path, 'r') as zip_ref:
        zip_ref.extractall(upload_folder)

    # –ò—â–µ–º HTML-—Ñ–∞–π–ª –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –µ–≥–æ
    html_files = list(upload_folder.glob('*.html'))
    if not html_files:
        raise FileNotFoundError("HTML —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω–æ–º –∞—Ä—Ö–∏–≤–µ")

    original_html_name = Path(word_path).stem + '.html'
    original_html_path = upload_folder / original_html_name
    html_files[0].rename(original_html_path)

    upload_zip_path = None

    # –ï—Å–ª–∏ images_dir —É–∫–∞–∑–∞–Ω –∏ –≤ –Ω—ë–º –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ‚Äî —Å–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤
    if images_dir and Path(images_dir).exists():
        image_files = list(Path(images_dir).glob('*'))
        if image_files:
            # –°–æ–∑–¥–∞—ë–º images/ –≤ –ø–∞–ø–∫–µ upload_folder
            images_folder = upload_folder / 'images'
            images_folder.mkdir(exist_ok=True)

            for img_path in image_files:
                shutil.copy(img_path, images_folder / img_path.name)

            # ‚úÖ –°–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤ upload.zip —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
            upload_zip_path = upload_folder / 'upload.zip'
            with zipfile.ZipFile(upload_zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
                for img_file in images_folder.glob('*'):
                    arcname = img_file.name
                    zipf.write(img_file, arcname)

    print(f"üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
    print(f"üìù HTML: {original_html_path}")
    if upload_zip_path:
        print(f"üóÇÔ∏è ZIP:  {upload_zip_path}")
    else:
        print("‚ÑπÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Ç ‚Äî zip –∞—Ä—Ö–∏–≤ –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è")

    prepare_html(original_html_path)
    return str(original_html_path), str(upload_zip_path) if upload_zip_path else None, upload_folder


def prepare_html(html_path):
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTML"""
    # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    with open(html_path, 'r', encoding='utf-8') as file:
        html_content = file.read()

    # –û—á–∏—Å—Ç–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –æ—Ç Google
    html_content = remove_google_redirects(html_content)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–ª–æ–∫–æ–≤ –∫–æ–¥–∞
    html_content = process_code_sections(html_content)

    # –ó–∞–ø–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª
    with open(html_path, 'w', encoding='utf-8') as file:
        file.write(html_content)
